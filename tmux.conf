# Not to forget
# l: previously selected window
# L: previously selected session

# TODO
# https://github.com/sainnhe/tmux-fzf

# Base configuration
# ------------------------------------------------------------------------

# change prefix: other candidates are backtick, ctrl u ctrl a ctrl s
unbind C-b
set -g prefix C-space
bind-key C-space send-prefix
set -g default-shell /usr/bin/zsh
set -g status off
# Toggle status line visibility
bind C-s set-option status
# bind C-s set-window-option synchronize-panes

set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",*-256color:Tc"

# neovim checkhealth:
set-option -g focus-events on
set-option -sa terminal-overrides ',alacritty:RGB'


# Key modes: the first is for the status line, the second for all other
# modes.  With these settings, it is possible to use Emacs navigation
# where no Vi normal mode motions are possible, but keep Vi-like
# behaviour for everything else.
#
# set-option -g status-keys emacs
#
setw -g mode-keys vi
set -g history-limit 10000
set -g wrap-search on
set -sg escape-time 0
#set -g repeat-time 300

# ------------------------------------------------------------------------
# Key bindings
# ------------------------------------------------------------------------

# reload this config
unbind r
bind-key r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# cpdfd resize pane, tmux book:
#bind -nr M-S-Left swap-window -t -1
#bind -nr M-S-Right swap-window -t +1

bind c new-window -c "#{pane_current_path}"

# The default binding for s is list-sessions
bind -r v split-window -h -p 50 -c '#{pane_current_path}' # horizontally split active pane
bind -r s split-window -v -p 50 -c '#{pane_current_path}' # vertically split active pane
bind -r V split-window -fh -c '#{pane_current_path}' # horizontal for whole screen
bind -r S split-window -fv -c '#{pane_current_path}' # vertical for whole screen

# Kill current pane (-a is for kill all except current)
bind -r x kill-pane
bind C-x kill-pane -a

# Smart pane switching with awareness of Vim splits and fzf activity.
# See: https://github.com/christoomey/vim-tmux-navigator
# Other possibility: https://github.com/mislav/dotfiles.git
# fzf support added by changing "view" into "fzf|view"
is_send="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(fzf|view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_send" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_send" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_send" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_send" 'send-keys C-l'  'select-pane -R'
bind-key -n 'C-\' if-shell "$is_send" 'send-keys C-\\'  'select-pane -l'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Resize panes with <prefix>Alt-{h,j,k,l}.  
# bind -r M-j resize-pane -D 2
# bind -r M-k resize-pane -U 2
# bind -r M-l resize-pane -R 5
# Chris Toomey: bind -r M-h resize-pane -L 5
bind -n S-Left resize-pane -L 10
bind -n S-Right resize-pane -R 10
bind -n S-Down resize-pane -D 5
bind -n S-Up resize-pane -U 5
# neovim has the same mapping:
# bind -n C-Left resize-pane -L 10
# bind -n C-Right resize-pane -R 10
# bind -n C-Down resize-pane -D 5
# bind -n C-Up resize-pane -U 5


bind B break-pane
bind b break-pane -d 
bind J join-pane -b -s !
bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# ------------------------------------------------------------------------
# modes
# ------------------------------------------------------------------------

# default [
bind Escape copy-mode

# default space starts selection, enter stops selection and ] pastes
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -selection clipboard -i"
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# ------------------------------------------------------------------------
# User Interface
# ------------------------------------------------------------------------

# Title and window settings
set -g set-titles on # string shown on titlebars or programs such as `xwininfo`
set -g set-titles-string "#T" # title format
set -g automatic-rename on # name windows with <prefix>, (sessions with <prefix>$)
set -g aggressive-resize off
set -g alternate-screen on

set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# Feedback (numbers represent miliseconds)
#set -g display-panes-time 1200 # indicators for `display-panes` command
#set -g display-time 1200 # use 0 to keep status line messages until key press

# Alerts
#set -g monitor-bell on # check for terminal bell
set -g monitor-activity on # check for activity
set -g monitor-silence 0 # do not check for inactivity
#set -g bell-action any # monitor all windows
set -g activity-action other # monitor activity in other windows NOTE DO NOT TRACK CURRENT
set -g silence-action none # this should have no effect when: monitor-silence off
#set -g visual-activity on # show message, make no sound
#set -g visual-bell on # show message, make no sound

# set -g pane-border-style "bg=colour8,fg=default"
# set -g pane-active-border-style "bg=colour15,fg=colour11"

# ------------------------------------------------------------------------
# Status bar
# ------------------------------------------------------------------------

# Interval to update status bar in seconds.  Only affects some elements.
# set -g status-interval 120

# Status bar general options about placement and overall style.
# set -g status on
#set -g status-style "fg=$tempus_fg,bg=$tempus_bg_dim"
set -g status-position top
# set -g status-justify left # this concerns the window list

# The status bar has three components: left, right, centre(the window list).
# set -g status-left-length "100"
# set -g status-right-length "100"

# Chris Toomey:
# Simplify status bar display.
# set -g status-left-length 100
# set -g status-fg black
# set -g status-bg colour11
# set -g status-left '[#S] '
# set -g status-right "#(acpi | cut -d, -f2) #{?pane_synchronized,--SYNCED--,} #(date '+%a,%b %d-%H:%M ') "
#
# if-shell "test -f ~/.config/tmux/tmuxline.conf" "source-file ~/.config/tmux/tmuxline.conf"

# ------------------------------------------------------------------------
# Testing, chris toomey
# ------------------------------------------------------------------------
# Workflow enhancement
# bind-key h split-window -h "htop"
# bind-key g split-window -h -c ~/ "vim +ls"

# break out with a new session from within tmux
bind C-b send-keys 'tat && exit' 'C-m'

# Switch session fuzzily
bind C-j split-window -v "tmux list-sessions -F '#{session_activity}:#{session_name}' | sort -nr | cut -d ':' -f 2 | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
#bind-key J command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Always stay in tmux
# Note: ! defaults to break-pane
bind-key ! run-shell '(tmux switch-client -l || tmux switch-client -n) && tmux kill-session -t "#S" || tmux kill-session'
